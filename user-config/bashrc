# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

if [ -f /etc/profile ]; then
  source /etc/profile
  fi

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# Enable auto cd
shopt -s autocd

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
#[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
        # We have color support; assume it's compliant with Ecma-48
        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
        # a case would tend to support setf rather than setaf.)
        color_prompt=yes
    else
        color_prompt=
    fi
fi

# colors
darkgrey="$(tput bold ; tput setaf 0)"
red="$(tput bold; tput setaf 1)"
green="$(tput bold; tput setaf 2)"
yellow="$(tput bold; tput setaf 3)"
blue="$(tput bold; tput setaf 4)"
magenta="$(tput bold; tput setaf 5)"
cyan="$(tput bold; tput setaf 6)"
white="$(tput bold ; tput setaf 7)"
nc="$(tput sgr0)"

if [ "$color_prompt" = yes ]; then
  PS1='\[$red\]┌─$([[ $? != 0 ]] && echo "\[$magenta\][✗]\[$red\]─")\[$red\][ \[$blue\]\H \[$cyan\]\w\[$darkgrey\]\[$yellow\]$(__git_ps1)\[$red\] ]\n\[$red\]└──╼ \[$green\]$([[ $EUID == "0" ]] && echo "#" || echo "$")\[$nc\] '
else
    PS1='\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -l'
alias la='ls -la'
alias l='ls -CF'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

if [ -f ~/.bash_private_aliases ]; then
    . ~/.bash_private_aliases
fi

if [ -f ~/.bash_functions ]; then
    . ~/.bash_functions
fi

# https://repo.cykerway.com/complete-alias
if [ -f /usr/share/bash-complete-alias/complete_alias ]; then
  . /usr/share/bash-complete-alias/complete_alias
fi


# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

### SOME LOCAL VARIABLES ###

# Editor
export EDITOR="nvim"

# Visual
export VISUAL="nvim"

# Fix DIR
#PATH="$(ruby -e 'print Gem.user_dir')/bin:$HOME/.local/bin:$HOME/.local/share/osxcross/target/bin:$HOME/.cargo/bin:$PATH"
export PATH="$HOME/.local/bin:$HOME/.local/share/osxcross/target/bin:$HOME/.cargo/bin:$HOME/.dotnet/tools:$HOME/Projects/Rust/Development/findomain-plus/target/release:$PATH"

# Output vscode telemetry
export DOTNET_CLI_TELEMETRY_OPTOUT=1

# Set TERM
export TERM=xterm-256color

# Set rusnapshot database file
# export RUSNAPSHOT_DATABASE_FILE="/mnt/defvol/_snapshots/rustnapshot.sqlite"
### END OF SOME LOCAL VARIABBLES ###

### Source scripts ###
# Git prompt, see https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh
if [ -f ~/.local/bin/git-prompt.sh ]; then
  source $HOME/.local/bin/git-prompt.sh
fi

#if [ -f /usr/share/doc/pkgfile/command-not-found.bash ]; then
#  source /usr/share/doc/pkgfile/command-not-found.bash
#fi

# Autostart X at login
if [[ ! $DISPLAY && $XDG_VTNR -eq 1 ]]; then
  VDPAU_DRIVER=nvidia QT_QPA_PLATFORMTHEME=qt5ct XKB_DEFAULT_LAYOUT=latam startx
fi
